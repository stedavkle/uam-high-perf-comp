1.
    CPU Model:
        Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz
    SIMD ISA:
        mmx sse sse2 ssse3 sse4_1 sse4_4 avx avx2 fma adx aes bmi1 bmi2 clfushopt fsgsbase fxsr invpcid monitor movbe mpx pclmulqdq popcnt rdrand rdseed rdtscp sxavec xsaveopt
3.
    GCC Version:x
        gcc (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2)
    Report:
        simple2.c:26:21: optimized: loop vectorized using 32 byte vectors
        simple2.c:19:17: optimized: loop vectorized using 32 byte vectors
    Explanation:
        2 loops were vectorized, first loop is at line 26, the second loop at line 19
        the outer loop at line 25 did not get vectorized because there is another vectorized loop inside it
4.
    result: c = 4194513.817600

    without: -fno-tree-vectorize
    report:
        simple2.c:26:21: optimized: loop vectorized using 32 byte vectors
        simple2.c:19:17: optimized: loop vectorized using 32 byte vectors
5.
    the main differences are, that we process multiple doubles at onces which prevented us  from having to calculating the same aporation multiple times.
    examples:
        .p2align- movdqa
        mulsd   - mulpd
        movsd   - movaps
        addq    - paddd
